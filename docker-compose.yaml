version: "2.2"

services:
  db:
    image: mariadb:10.2
    container_name: chat_db
    environment:
      MYSQL_ROOT_PASSWORD: my-password
      MYSQL_DATABASE: chat
      MYSQL_USER: chat
      MYSQL_PASSWORD: mypassword
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: mysqladmin ping -hlocalhost -uroot -pmy-password
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis
    container_name: chat_redis
    restart: always
    command: redis-server --requirepass sZA8khTCpbHkeU --loglevel debug
    volumes:
      - redis_data:/data
    ports:
      - "6380:6380"

  celery:
    depends_on:
      - redis
    build: ./backend
    container_name: chat_worker
    env_file: ./backend/docker-compose.env
    command: celery -A config.celery worker -n default_worker -l info
    volumes:
      - ./backend/:/src
    restart: "no"

  celery_flower:
    depends_on:
      - redis
      - celery
      - db
    build: ./backend
    container_name: chat_flower
    env_file: ./backend/docker-compose.env
    command: celery -A config.celery flower --port=5555
    ports:
      - 5555:5555
    restart: always

  celery_beat:
    depends_on:
      - redis
    build: ./backend
    container_name: chat_celery_beat
    env_file: ./backend/docker-compose.env
    command: celery -A config.celery beat -l info
    volumes:
      - ./backend/:/src
    restart: "no"

  backend:
    depends_on:
      - db
      - redis
    build: ./backend
    container_name: chat_backend
    env_file: ./backend/docker-compose.env
    command: bash ./scripts/run_backend_local.sh
    volumes:
      - ./backend:/src
    ports:
      - "8000:8000"
    restart: "no"

  frontend:
    image: chat_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chat_frontend
    env_file: ./frontend/docker-compose.env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/public:/frontend/public

volumes:
  mysql_data:
  redis_data:
